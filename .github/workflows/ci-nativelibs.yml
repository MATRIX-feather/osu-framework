on: workflow_dispatch
name: Continuous Integration - NativeLibs

jobs:
  check-if-tag:
    name: Set Package Version
    runs-on: ubuntu-latest
    outputs:
      version: ${{steps.deployment.outputs.version}}
    steps:
      - name: Set Variables
        id: deployment
        shell: bash
        run: |
          if [ $(echo ${{github.ref}} | grep -q "refs/tags/"; echo $?) == 0 ]; then
            echo "::set-output name=VERSION::${GITHUB_REF#/refs\/tags\//}"
          else
            echo "::set-output name=VERSION::0.0.0+${{github.run_id}}"
          fi
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: check-if-tag
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set Artifacts Directory
        id: artifactsPath
        run: echo "::set-output name=NUGET_ARTIFACTS::${{github.workspace}}/artifacts"

      - name: Setup .NET 5.0.x
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: "5.0.x"

      - name: Build NativeLibs
        run: dotnet pack -c Release osu.Framework.NativeLibs /p:Configuration=Release /p:Version=${{needs.check-if-tag.outputs.version}} /p:GenerateDocumentationFile=true -o ${{steps.artifactsPath.outputs.nuget_artifacts}}

      - name: Upload Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: osu-framework-nativelibs
          path: ${{steps.artifactsPath.outputs.nuget_artifacts}}/*.nupkg

      - name: Deploy
        run: |
          if [ $(echo ${{needs.check-if-tag.outputs.version}} | grep -q "0.0.0+${{github.run_id}}"; echo $?) == 0 ]; then
            echo "Skipping publish, no tag detected."
            exit 0;
          else
            dotnet nuget add source https://api.nuget.org/v3/index.json -n authed-nuget -u ${{secrets.NUGET_USER_NAME}} -p ${{secrets.NUGET_AUTH_TOKEN}}
            dotnet nuget push ${{github.workspace}}/artifacts/*.nupkg --skip-duplicate --source authed-nuget
          fi
